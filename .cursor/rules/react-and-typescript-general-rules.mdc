---
description: General rules for React and TypeScript projects, focusing on code clarity and best practices.
globs: **/*.{ts,tsx,js,jsx}
alwaysApply: false
---
# Общи правила за React и TypeScript

## Основни принципи
- Пишете деклариран, функционален код, подходящ за React
- Спазвайте принципите на компонентно-ориентираната архитектура
- Следвайте най-добрите практики на TypeScript за типобезопасност

## Компоненти и hooks
- Създавайте малки, фокусирани компоненти с единична отговорност
- Предпочитайте функционални компоненти с hooks
- Използвайте собствени hooks за извличане на повтаряща се логика
- Спазвайте правилата за hooks (използвайте ги само на топ ниво)
- Разделяйте UI, бизнес логика и заявки към API

## Стилове на кодиране
- Използвайте деструктуриране за props: `function Component({ prop1, prop2 })` 
- Прилагайте ранно връщане за условна логика
- Винаги задавайте ключове при рендериране на списъци
- Избягвайте inline стилове и нетипизирани обекти
- Поддържайте консистентно форматиране с Prettier

## Управление на данни
- Използвайте подходящи инструменти за управление на състоянието (React Context, Redux)
- Внимателно планирайте структурата на състоянието
- Имплементирайте ефективна стратегия за кеширане на данни
- Използвайте имутабилност при работа със състояние

## Работа с API
- Изолирайте API логиката в отделен слой
- Използвайте TypeScript типове, които съответстват на структурата на API отговорите
- Обработвайте грешки и показвайте подходящи съобщения за потребителя